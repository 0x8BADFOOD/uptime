<div class="tab-pane" id="data">
  <table class="table stat" style="display:none">
    <thead>
      <tr>
        <th class="date">Date</th>
        <th title="Percentage of uptime">Availability</th>
        <th title="Total downtime">Downtime</th>
        <th title="Percentage of all pings below slow threshold">Responsiveness</th>
        <th title="Average response time of all pings">Response time</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>
  <table class="table ping" style="display:none">
    <thead>
      <tr><th>Date</th><th>Status</th><th>Response time</th><th>Error</th></tr>
    </thead>
    <tbody></tbody>
  </table>
  <div style="clear:left"></div>
</div>
<script src="<%= route %>/javascripts/uptimeBar.js"></script>
<script id="stat_template" type="text/template">
<tr class="{{= (stat.availability < 100) ? 'red' : (stat.responsiveness < 100) ? 'orange' : '' }}{{= ['0','6'].indexOf(moment(stat.timestamp).format('d')) !== -1 ? ' week-end' : '' }}">
  <td title="{{= new Date(stat.timestamp) }}">{{= moment(stat.timestamp).format(dateFormat) }}</td>
  <td>{{= stat.availability.replace('.000', '') }}%</td>
  <td title="{{= stat.downtime }}s">{{= stat.downtime == 0 ? '' : stat.downtime < 300 ? stat.downtime + 's' : moment.duration(stat.downtime, 'seconds').humanize() }}</td>
  <td>{{= stat.responsiveness.replace('.000', '') }}%</td>
  <td>{{= stat.responseTime }}ms</td>
</tr>
</script>
<script id="ping_template" type="text/template">
<tr class="{{= !ping.isUp ? 'red' : !ping.isResponsive ? 'orange' : '' }}">
  <td title="{{= new Date(ping.timestamp) }}">{{= moment(ping.timestamp).format('LLLL') }}</td>
  <td>
    <span class="label {{= (ping.isUp ? 'label-success' : 'label-important') }}">{{= (ping.isUp ? 'Up' : 'Down') }}</span>
    {{ if (ping.isUp && !ping.isResponsive) { }}<span class="label label-warning">Slow</span>{{ } }}
  </td>
  <td>{{= parseInt(ping.time) }}ms</td>
  <td>{{= ping.error || '' }}</td>
</tr>
</script>
<script>
var dateFormats = {
  'day': 'LLLL',
  'month': 'dddd, LL',
  'year': 'MMMM YYYY'
}
$(document).ready(function() {
  $('a[data-toggle="tab"][href="#data"]').one('shown', function(e) {
    var stat_template = document.getElementById('stat_template').innerHTML;
    var ping_template = document.getElementById('ping_template').innerHTML;
    var updateStats = function() {
      var data = $('#dateNavigation .timeline').data();
      var type = dateNavigation.type;
      var date = dateNavigation.momentForDate;
      var begin = date.clone().startOf(type);
      var end = date.clone().endOf(type);
      if (type == 'hour') {
        $.getJSON('<%= url %>' + type + '?begin=' + begin.valueOf() + '&end=' + end.valueOf(), function(stats) {
          var lines = [];
          $.each(stats, function(key, stat) {
            lines.unshift(ejs.render(ping_template, { ping: stat }));
          });
          $('#data table.stat').hide();
          $('#data table.ping tbody').html(lines.join(''));
          $('#data table.ping').show();
        });
      } else {
        $.getJSON('<%= url %>' + type + '?begin=' + begin.valueOf() + '&end=' + end.valueOf(), function(stats) {
          var lines = [];
          $.each(stats, function(key, stat) {
            lines.unshift(ejs.render(stat_template, { stat: stat, dateFormat: dateFormats[data.type] }));
          });
          $('#data table.ping').hide();
          $('#data table.stat tbody').html(lines.join(''));
          $('#data table.stat').show();
        });
      }
    }
    updateStats();
    $('#dateNavigation .timeline').on('refresh', updateStats);
  });
});
</script>
